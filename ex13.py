"""
Для решения этой задачи можно использовать следующий подход:

    Найти индексы открывающейся и закрывающейся скобок.
    Выделить подстроку между этими индексами и вывести её
"""
def get_characters_inside_brackets(s):
    """
    Функция находит символы, расположенные между открывающейся
    и закрывающейся скобками в строке s.
    
    Аргументы:
    s: str - исходная строка, содержащая скобки
    
    Возвращает:
    characters_inside: str - подстрока, расположенная между скобками
    """
    opening_index = s.find('(')  # Находим индекс открывающейся скобки
    closing_index = s.find(')')  # Находим индекс закрывающейся скобки
    
    if opening_index != -1 and closing_index != -1:  # Если скобки найдены
        characters_inside = s[opening_index + 1:closing_index]  # Выделяем подстроку между скобками
        return characters_inside  # Возвращаем подстроку
    
    return ""  # Если скобки не найдены, возвращаем пустую строку

# Пример использования:
s = "Это (подстрока) внутри скобок"
characters_inside = get_characters_inside_brackets(s)
print("Символы внутри скобок:", characters_inside)

#Этот код ищет первую открывающуюся скобку и первую закрывающуюся скобку в строке s. Затем он выделяет подстроку между этими индексами и возвращает её. Если одна из скобок не найдена, функция вернет пустую строку
